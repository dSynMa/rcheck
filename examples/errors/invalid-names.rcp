enum channel {ch}
enum a {foo, bar}
property-variables: x : bool

agent agent
    // REPAIR: changed agent name 'Agent' to 'Process'
    // REPAIR: changed variable name 'agent' to 'b'
    // REPAIR: changed variable name 'true' to 'n'
    local: counter:int, b:bool, true:int
    init: true

    repeat: (
                label: {counter == 0} ch! true () [counter := 1]
            )

system = agent(one, true)

// This example should trigger the following errors:
// Expecting token of type 'ID' but found `agent`. [Ln 5, Col 7]
// Expecting token of type 'ID' but found `local`. [Ln 9, Col 5]
// Expecting token of type 'ID' but found `true`. [Ln 9, Col 33]
// Expecting token of type 'ID' but found `agent`. [Ln 16, Col 10]
// Expecting token of type 'EOF' but found `agent`. [Ln 16, Col 10]
